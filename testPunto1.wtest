import empleados.*

describe "baigorria" {
  test "baigorria vende 500 empanadas" {
    baigorria.vender(500)    
    assert.equals(500 * 15, baigorria.sueldo())
  }

  test "baigorria vende 300 empanadas" {
    baigorria.vender(300)    
    assert.equals(300 * 15, baigorria.sueldo())
  }

  test "baigorria describe el valor a cobrar de la venta de 300 empanadas" {
    baigorria.empanadasVendidas(300)

    assert.equals(300, baigorria.empanadasVendidas())
    assert.equals(15, baigorria.comisionEmpanada())

    assert.equals(300*15, baigorria.sueldoACobrar())
  }
}

describe "galvan" {
    test "galvan cobra un sueldo de 20.000" {
    galvan.sueldo(20000)
    
    assert.equals(20000, galvan.sueldo())
  }
}

// describe "gimenez" {
//   test "gimenez paga sueldo a galvan" {
//     gimenez.pagarSueldo(galvan)

//     assert.equals(300000-15000, gimenez.fondo())
//     assert.equals(15000, galvan.sueldo())
//   }

//   test "gimenez paga sueldo a baigorria" {
//     baigorria.empanadasVendidas(300)

//     assert.equals(4500, baigorria.sueldoACobrar())

//     // gimenez.pagarSueldo(baigorria)

//     // assert.equals(300000 - 4500, gimenez.fondo())
//     // assert.equals(0, baigorria.empanadasVendidas())
//     // assert.equals(4500, baigorria.sueldo())
//   }


// }

// test "punto1: Planteo inicial" {
//   baigorria.vender(500)
//   galvan.sueldo(20000)
//   baigorria.vender(300)
//   assert.equals(12000, baigorria.sueldo())
//   assert.equals(20000, galvan.sueldo())
  
//   gimenez.pagarSueldo(baigorria)
//   gimenez.pagarSueldo(galvan)
//   assert.equals(268000, gimenez.fondo())
// }